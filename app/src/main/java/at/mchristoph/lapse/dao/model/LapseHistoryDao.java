package at.mchristoph.lapse.dao.model;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import at.mchristoph.lapse.dao.model.LapseHistory;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LAPSE_HISTORY".
*/
public class LapseHistoryDao extends AbstractDao<LapseHistory, Long> {

    public static final String TABLENAME = "LAPSE_HISTORY";

    /**
     * Properties of entity LapseHistory.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Framerate = new Property(1, long.class, "framerate", false, "FRAMERATE");
        public final static Property Interval = new Property(2, long.class, "interval", false, "INTERVAL");
        public final static Property MovieTime = new Property(3, long.class, "movieTime", false, "MOVIE_TIME");
        public final static Property Location = new Property(4, String.class, "location", false, "LOCATION");
        public final static Property Created = new Property(5, java.util.Date.class, "created", false, "CREATED");
    };


    public LapseHistoryDao(DaoConfig config) {
        super(config);
    }
    
    public LapseHistoryDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"LAPSE_HISTORY\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"FRAMERATE\" INTEGER NOT NULL ," + // 1: framerate
                "\"INTERVAL\" INTEGER NOT NULL ," + // 2: interval
                "\"MOVIE_TIME\" INTEGER NOT NULL ," + // 3: movieTime
                "\"LOCATION\" TEXT," + // 4: location
                "\"CREATED\" INTEGER NOT NULL );"); // 5: created
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"LAPSE_HISTORY\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, LapseHistory entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getFramerate());
        stmt.bindLong(3, entity.getInterval());
        stmt.bindLong(4, entity.getMovieTime());
 
        String location = entity.getLocation();
        if (location != null) {
            stmt.bindString(5, location);
        }
        stmt.bindLong(6, entity.getCreated().getTime());
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public LapseHistory readEntity(Cursor cursor, int offset) {
        LapseHistory entity = new LapseHistory( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getLong(offset + 1), // framerate
            cursor.getLong(offset + 2), // interval
            cursor.getLong(offset + 3), // movieTime
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // location
            new java.util.Date(cursor.getLong(offset + 5)) // created
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, LapseHistory entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setFramerate(cursor.getLong(offset + 1));
        entity.setInterval(cursor.getLong(offset + 2));
        entity.setMovieTime(cursor.getLong(offset + 3));
        entity.setLocation(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setCreated(new java.util.Date(cursor.getLong(offset + 5)));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(LapseHistory entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(LapseHistory entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
